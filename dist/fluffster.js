function State(t,e){return this instanceof State?(this.state=t.appState,this._localStream$=kefir.pool(),this._propertyKeepAlive$=e,this._component=t.component,t.id&&(this._id=t.id),this._combinedStream$$=!(!this._localStream$||!this._propertyKeepAlive$)&&kefir.combine([this._localStream$,this._propertyKeepAlive$],function(t,e){return utils.extendMany({},{appState:t},{global:e})}),this.listeners=[],t.messages&&this.assignMessages(t.messages),this.onNext=function(t){this._localStream$.plug(utils.emit(t))}.bind(this),this.updateState=function(t){var e=utils.extendMany({},this.state,t);utils.compareTo(this.state,e)||(utils.extend(this.state,t),this.onNext(this.state))}.bind(this),this.onNext(this.state),this.provide(),void 0):new State(state)}var utils=require("./utils"),kefir=require("kefir");State.prototype.stream=function(){return this._combinedStream$$?this._combinedStream$$:this._localStream$},State.prototype.provide=function(){this.stream().onValue(function(t){utils.each(this._component,function(e){e.subscribe&&e.subscribe(t)}.bind(this))}.bind(this))},State.prototype.passMessage=function(t,e){t in this.messages&&this.updateState(this.messages[t](this.state,e))},State.prototype.assignMessages=function(t){this.messages=t},module.exports=State;